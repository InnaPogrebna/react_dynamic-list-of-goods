{"version":3,"sources":["api/goods.ts","components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["getAll","fetch","then","response","json","GoodsList","goods","className","map","good","id","name","style","color","App","useState","setGoods","getAllGoods","a","get5FirstSort","sort","b","localeCompare","slice","getRedColor","filter","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"iQAKO,SAASA,IACd,OAAOC,MAHO,yEAIXC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,U,MAGxB,I,OCeQC,EAjBmB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnC,OACE,oBAAIC,UAAU,OAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,qBAEEF,UAAU,aAFZ,UAIE,4BAAIE,EAAKC,KACT,4BAAID,EAAKE,OACT,mBAAGC,MAAO,CAAEC,MAAOJ,EAAKI,OAAxB,SAAkCJ,EAAKI,UALlCJ,EAAKC,UCyCLI,EAhDO,WACpB,MAA0BC,mBAAiB,IAA3C,mBAAOT,EAAP,KAAcU,EAAd,KAEMC,EAAW,uCAAI,sBAAAC,EAAA,kEACnBF,EADmB,SACJhB,IADI,6EAAJ,qDAIXmB,EAAa,uCAAI,sBAAAD,EAAA,kEACrBF,EADqB,SFFhBhB,IAASE,MAAK,SAAAC,GAAQ,OAAIA,EAC9BiB,MAAK,SAACF,EAAGG,GAAJ,OAAUH,EAAEP,KAAKW,cAAcD,EAAEV,SAAOY,MAAM,EAAG,MEClC,6EAAJ,qDAIbC,EAAW,uCAAI,sBAAAN,EAAA,kEACnBF,EADmB,SFDdhB,IACJE,MAAK,SAAAC,GAAQ,OAAIA,EACfsB,QAAO,SAAAhB,GAAI,MAAmB,QAAfA,EAAKI,YEDJ,6EAAJ,qDAIjB,OACE,sBAAKN,UAAU,MAAf,UACE,uDACA,sBAAKA,UAAU,aAAf,UACE,wBACEmB,KAAK,SACLC,QAASV,EACTV,UAAU,iBAHZ,4BAOA,wBACEmB,KAAK,SACLC,QAASR,EACTZ,UAAU,iBAHZ,+BAOA,wBACEmB,KAAK,SACLC,QAASH,EACTjB,UAAU,iBAHZ,+BAQF,8BACID,GAAS,cAAC,EAAD,CAAWA,MAAOA,UC7CrCsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3a608796.chunk.js","sourcesContent":["import { Good } from '../react-app-env';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json';\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll().then(response => response\n    .sort((a, b) => a.name.localeCompare(b.name)).slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(response => response\n      .filter(good => good.color === 'red'));\n};\n","import React from 'react';\nimport { Good } from '../../react-app-env';\nimport './GoodsList.scss';\n\ntype Props = {\n  goods: Good[],\n};\n\nconst GoodsList:React.FC<Props> = ({ goods }) => {\n  return (\n    <ul className=\"list\">\n      {goods.map(good => (\n        <li\n          key={good.id}\n          className=\"list__item\"\n        >\n          <p>{good.id}</p>\n          <p>{good.name}</p>\n          <p style={{ color: good.color }}>{good.color}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default GoodsList;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport GoodsList from './components/GoodsList/GoodsList';\nimport { Good } from './react-app-env';\n\nconst App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  const getAllGoods = (async () => {\n    setGoods(await getAll());\n  });\n\n  const get5FirstSort = (async () => {\n    setGoods(await get5First());\n  });\n\n  const getRedColor = (async () => {\n    setGoods(await getRedGoods());\n  });\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n      <div className=\"App__block\">\n        <button\n          type=\"button\"\n          onClick={getAllGoods}\n          className=\"App__block-btn\"\n        >\n          Load All goods\n        </button>\n        <button\n          type=\"button\"\n          onClick={get5FirstSort}\n          className=\"App__block-btn\"\n        >\n          Load 5 first good\n        </button>\n        <button\n          type=\"button\"\n          onClick={getRedColor}\n          className=\"App__block-btn\"\n        >\n          Load red goods\n        </button>\n      </div>\n      <div>\n        { goods && <GoodsList goods={goods} />}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}